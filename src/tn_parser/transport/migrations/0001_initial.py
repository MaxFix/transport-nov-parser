# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-12 21:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataProviderUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(help_text='The link for getting data through certain API')),
                ('type', models.CharField(choices=[('2gis_route_api', '2GIS route API'), ('routes_html_page', 'Routes HTML-page'), ('route_html_page', 'Route HTML-page')], max_length=32)),
                ('coding', models.CharField(default='utf-8', max_length=32)),
                ('route_code', models.CharField(blank=True, default='', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='NameAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('full_name', models.CharField(blank=True, default='', max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('longitude', models.FloatField(blank=True, help_text='Longitude in WGS84 system', null=True)),
                ('latitude', models.FloatField(blank=True, help_text='Latitude in WGS84 system', null=True)),
                ('geo_direction', models.CharField(blank=True, choices=[('n', 'Север'), ('ne', 'Северо-восток'), ('e', 'Восток'), ('se', 'Юго-восток'), ('s', 'Юг'), ('sw', 'Юго-запад'), ('w', 'Запад'), ('nw', 'Северо-запад')], max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('code', models.CharField(max_length=32, unique=True)),
                ('type', models.CharField(choices=[('bus', 'Автобус'), ('trolleybus', 'Троллейбус')], default='bus', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='RoutePoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(blank=True, null=True)),
                ('skip', models.BooleanField(default=False)),
                ('lap', models.SmallIntegerField(default=-1)),
                ('lap_start', models.BooleanField(default=False)),
                ('direction', models.CharField(choices=[('forward', 'Вперёд'), ('backward', 'Назад'), ('circular', 'Кольцевой')], max_length=16)),
                ('order', models.SmallIntegerField(default=999)),
                ('geo_direction', models.CharField(blank=True, choices=[('n', 'Север'), ('ne', 'Северо-восток'), ('e', 'Восток'), ('se', 'Юго-восток'), ('s', 'Юг'), ('sw', 'Юго-запад'), ('w', 'Запад'), ('nw', 'Северо-запад')], max_length=16)),
                ('angle', models.FloatField(default=0.0)),
                ('on_demand', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RouteWeekDimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekend', models.BooleanField(default=False)),
                ('weekday', models.SmallIntegerField(default=1, help_text='Day of week from 1 to 7, first is monday')),
            ],
        ),
        migrations.CreateModel(
            name='PlatformAlias',
            fields=[
                ('namealias_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.NameAlias')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='transport.Platform')),
            ],
            bases=('transport.namealias',),
        ),
        migrations.CreateModel(
            name='RouteDateDimension',
            fields=[
                ('routeweekdimension_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.RouteWeekDimension')),
                ('year', models.SmallIntegerField()),
                ('month', models.SmallIntegerField()),
                ('day', models.SmallIntegerField()),
                ('week', models.SmallIntegerField()),
                ('date', models.DateTimeField()),
            ],
            bases=('transport.routeweekdimension',),
        ),
        migrations.CreateModel(
            name='RouteSchedule',
            fields=[
                ('routepoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.RoutePoint')),
                ('date_dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_schedules', to='transport.RouteDateDimension')),
            ],
            bases=('transport.routepoint',),
        ),
        migrations.AddField(
            model_name='routepoint',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platforms', to='transport.Platform'),
        ),
        migrations.AddField(
            model_name='routepoint',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_points', to='transport.Route'),
        ),
        migrations.AddField(
            model_name='routepoint',
            name='week_dimension',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.RouteWeekDimension'),
        ),
        migrations.AddField(
            model_name='dataproviderurl',
            name='route',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data_providers', to='transport.Route'),
        ),
    ]
